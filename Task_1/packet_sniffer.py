# -*- coding: utf-8 -*-
"""Packet_Sniffer.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VE__UEcoZQorW1nZUV8bYNWY3vXfI6_p
"""

# Basic Network Packet Sniffer

from scapy.all import sniff, IP, TCP, UDP, ICMP, Raw
from datetime import datetime

# Function that analyze each packet
def analyze_packet(packet):
    print("\n" + "=" * 60)
    print("Packet captured at:", datetime.now().strftime("%Y-%m-%d %H:%M:%S"))

    # Checking if packet has an IP layer
    if IP in packet:
        ip_layer = packet[IP]
        print(f"Source IP       : {ip_layer.src}")
        print(f"Destination IP  : {ip_layer.dst}")
        print(f"Protocol Number : {ip_layer.proto}")


        if TCP in packet:
            tcp_layer = packet[TCP]
            print("Transport Layer : TCP")
            print(f"Source Port     : {tcp_layer.sport}")
            print(f"Destination Port: {tcp_layer.dport}")

        elif UDP in packet:
            udp_layer = packet[UDP]
            print("Transport Layer : UDP")
            print(f"Source Port     : {udp_layer.sport}")
            print(f"Destination Port: {udp_layer.dport}")

        elif ICMP in packet:
            print("Transport Layer : ICMP")

        # show payload
        if Raw in packet:
            try:
                data = packet[Raw].load.decode('utf-8', errors='ignore')
                print("Payload         :", data[:100] + "..." if len(data) > 100 else data)
            except:
                print("Payload         : <Unable to decode>")
    else:
        print("Non-IP Packet Detected")

# Entry point of the program
def main():
    print("=" * 60)
    print("Starting Packet Sniffer | Press Ctrl+C to stop")
    print("=" * 60)
    try:
        sniff(prn=analyze_packet, store=False, count=50)  # capture 50 packets then stop
    except KeyboardInterrupt:
        print("\Sniffer stopped by user.")
    except Exception as e:
        print("Error:", e)

if __name__ == "__main__":
    main()